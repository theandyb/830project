library(tidyverse)
df <- read_csv("data/marathon-data.csv")
head(data)
head(df)
df$split[1]
df$split[1]/13.1
dseconds(df$split[1])
library(lubridate)
dseconds(df$split[1])
hour(df$split[1])
minute(df$split[1])
second(df$split[1])
120 % 60
120 %% 60
1240 %% 60
140 %% 60
140 / 60
floor(140 / 60)
half_split(x){
secs <- (3600 * hour(x)) + (60 * minute(x)) + second(x)
secs_per_mile <- secs / 13.1
secs <- secs_per_mile %% 60
mins <- floor(secs_per_mile / 60)
return(hms(secs, floor))
}
half_split <- function(x){
secs <- (3600 * hour(x)) + (60 * minute(x)) + second(x)
secs_per_mile <- secs / 13.1
secs <- secs_per_mile %% 60
mins <- floor(secs_per_mile / 60)
return(hms(secs, floor))
}
half_split(hms(38,5,1))
library(hms)
hms(56,5,1)
half_split(hms(38,5,1))
second(hms(56,5,1))
second(hms(56,5,1)) * 60
x <- hms(56,5,1)
(3600 * hour(x)) + (60 * minute(x)) + second(x)
half_split <- function(x){
secs <- (3600 * hour(x)) + (60 * minute(x)) + second(x)
secs_per_mile <- secs / 13.1
secs <- secs_per_mile %% 60
mins <- floor(secs_per_mile / 60)
return(hms(secs, mins))
}
half_split(x)
secs_per_mile <- function(x, distance){
secs <- (3600 * hour(x)) + (60 * minute(x)) + second(x)
secs_per_mile <- secs / distance
return(secs_per_mile)
}
secs_per_mile(x, 13.1)
df <- df %>% mutate(halfPace = secs_per_mile(split, 13.1),
fullPace = secs_per_mile(final, 26.2))
head(df)
df$final[1] - df$split[1]
names(df$final[1] - df$split[1])
x <- df$final[1] - df$split[1]
x
x + 1
as.numeric(x)
hms(seconds = 3793)
hms(seconds = x)
hms(x)
df <- df %>% mutate(halfPace = secs_per_mile(split, 13.1),
fullPace = secs_per_mile(final, 26.2),
secondHalf = hms(as.numeric(final - split)))
head(df)
df <- df %>% mutate(halfPace = secs_per_mile(split, 13.1),
fullPace = secs_per_mile(final, 26.2),
secondHalf = hms(as.numeric(final - split)),
secondHalfPace = secs_per_mile(secondHalf, 13.1))
head(df)
hist(df$fullPace)
df$final < hms(0,5,3)
df$final[1] < hms(0,5,3)
sum(df$final < hms(0,5,3))
?lubridate::hms
lubridate::hms(1,1,1)
lubridate::hms(c(1,1,1))
lubridate::hms("1 20 34")
lubridate::hms("1 20 34") < lubridate::hms("3 05 00")
unique(df$gender)
hms(00, 5, 3)
is_bq <- function(x, gender, age){
if(gender == "M"){
if(age <= 35 & x < hms(00, 5, 3)) return(1)
else if( age > 35 & age <= 39 $ x < hms(00, 10, 3)) return(1)
is_bq <- function(x, gender, age){
if(gender == "M"){
if(age <= 35 & x < hms(00, 5, 3)) return(1)
else if( age > 35 & age <= 39 & x < hms(00, 10, 3)) return(1)
else if( age > 39 & age <= 44 & x < hms(00, 15, 3)) return(1)
else if( age > 44 & age <= 49 & x < hms(00, 25, 3)) return(1)
else if( age > 49 & age <= 54 & x < hms(00, 30, 3)) return(1)
else if( age > 54 & age <= 59 & x < hms(00, 40, 3)) return(1)
else if( age > 59 & age <= 64 & x < hms(00, 55, 3)) return(1)
else if( age > 64 & age <= 69 & x < hms(00, 10, 4)) return(1)
else if( age > 69 & age <= 74 & x < hms(00, 25, 4)) return(1)
else if( age > 74 & age <= 79 & x < hms(00, 40, 4)) return(1)
else if( age > 79 & x < hms(00, 55, 4)) return(1)
else return(0)
} else {
if(age <= 34 & x < hms(00, 35, 3)) return(1)
else if( age > 34 & age <= 39 & x < hms(00, 40, 3)) return(1)
else if( age > 39 & age <= 44 & x < hms(00, 45, 3)) return(1)
else if( age > 44 & age <= 49 & x < hms(00, 55, 3)) return(1)
else if( age > 49 & age <= 54 & x < hms(00, 00, 4)) return(1)
else if( age > 54 & age <= 59 & x < hms(00, 10, 4)) return(1)
else if( age > 59 & age <= 64 & x < hms(00, 25, 4)) return(1)
else if( age > 64 & age <= 69 & x < hms(00, 40, 4)) return(1)
else if( age > 69 & age <= 74 & x < hms(00, 55, 4)) return(1)
else if( age > 74 & age <= 79 & x < hms(00, 10, 5)) return(1)
else if( age > 79 & x < hms(00, 25, 5)) return(1)
else return(0)
}
}
is_bq(hms(28,19,2), "M", 27)
is_bq(df$final[1], df$gender[1], df$age[1])
df <- df %>% mutate(halfPace = secs_per_mile(split, 13.1),
fullPace = secs_per_mile(final, 26.2),
secondHalf = hms(as.numeric(final - split)),
secondHalfPace = secs_per_mile(secondHalf, 13.1),
BQ = is_bq(final, gender, age))
head(df)
head(df$BQ)
sum(df$bq < 1)
sum(df$BQ < 1)
df <- df %>%
rowwise() %>%
mutate(BQ = is_bq(final, gender, age))
sum(df$BQ < 1)
sum(df$BQ == 1)
df[3200:3250,]
df[3200:3250,] %>% dplyr::select(age, gender, final, BQ)
is_bq(hms(00,24,3), "M", 38)
hms(00,24,3) < hms(00,40,3)
test <- df[1:50,]
test
test <- test %>% select(age, gender, split, secondHalf)
test
gather(test, whichHalf, time, split:secondHalf )
